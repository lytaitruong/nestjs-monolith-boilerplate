version: '3.8'

services:
  backend-api:
    container_name: backend-api
    image: backend-api
    build: ./
    restart: always
    ports:
      - 3333:3333
    env_file: .env
    networks:
      - nestjs-postgres
      - nestjs-cache
    depends_on:
      - postgres
      - redis

  postgres:
    container_name: postgres_database
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes:
      - postgres_db:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - nestjs-postgres

  redis:
    container_name: redis
    image: redis:7.2
    restart: always
    command: redis-server --requirepass $IOREDIS_PASSWORD --appendonly yes
    ports:
      - 6379:6379
    volumes:
      - redis:/data
    env_file:
      - .env
    networks:
      - nestjs-cache

volumes:
  redis:
  postgres_db:

networks:
  nestjs-postgres:
    driver: bridge
  nestjs-cache:
    driver: bridge
